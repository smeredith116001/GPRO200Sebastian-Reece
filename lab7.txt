VS
------------------------------------------------
#version 300 es

layout (location = 0) in vec4 aPosition;
layout (location = 1) in vec3 aNormal;

layout (location = 2) in vec4 aTexcoord;

uniform mat4 uModelMat;
uniform mat4 uViewMat;
uniform mat4 uProjMat;
uniform mat4 uViewProjlMat;

out vec4 vNormal;
out vec4 vTexcoord;

struct pLight
{
 	vec4 center, color;
    float intensity; 
};

void initPointLight(in vec4 center, in vec4 color, float intensity, out pLight light)
{
    light.center = center;
    light.color = color;
    light.intensity = abs(intensity);
}

void main()
{
	mat4 modelViewMat = uViewMat * uModelMat;
	vec4 pos_camera = modelViewMat * aPosition;
	vec4 pos_clip = uProjMat * pos_camera;
	gl_Position = pos_clip;
	
	mat3 normalMat = transpose(inverse(mat3(modelViewMat)));
	vec3 norm_camera = normalMat * aNormal;
	
	//TEXCOORD PIPELINE
	mat4 atlasMat = mat4(0.5, 0.0, 0.0, 0.0,
						 0.0, 0.5, 0.0, 0.0,
						 0.0, 0.0, 1.0, 0.0,
						 0.25, 0.25, 0.0, 1.0);
	vec4 uv_atlas = atlasMat * aTexcoord;
	
	vNormal = vec4(norm_camera, 0.0);
	
		pLight lightSource;
	initPointLight(vec4(0.0, 1.0, 4.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0), 4.0, lightSource);
	//Lambertian Shit
	vec4 lightVec = normalize(lightSource.center - vTexcoord);
	float diffuseCoefficient = max(0.0, dot(vNormal, lightVec));
	float d = length(lightVec);
	float attenuation = 1.0 / (1.0 + (d/lightSource.intensity) + (d * d)/(lightSource.intensity * lightSource.intensity));
	float intensity = diffuseCoefficient * attenuation;
	//Phong light shit
	
	
	vec4 viewVec = normalize(vec4(norm_camera, 0.0) - vTexcoord);
	vec4 refLightVec = reflect(-lightVec, vNormal);
	float specCoefficient = max(0.0, dot(viewVec, refLightVec));
	float specIntensity = pow(specCoefficient, 16.0);
	
	float ambientIntensity = 0.1;
	vec4 ambientColor = vec4(0.0, 1.0, 1.0, 1.0);
	vec4 specRefColor = vec4(1.0, 1.0, 1.0, 1.0);
	
	vec4 phong = (ambientIntensity * ambientColor) + ((intensity * vNormal + specIntensity * specRefColor) * lightSource.color);
	vTexcoord = vec4(phong);
	
	
	
	
	
	
	//vTexcoord = aTexcoord;
}



PS
-------------------------------------------------
#version 300 es

#ifdef GL_ES
precision highp float;
#endif

layout (location = 0) out vec4 rtFragColor;

in vec4 vNormal;
in vec4 vTexcoord;

void main()
{
	vec4 N = normalize(vNormal);
	rtFragColor = vec4(N.xyz * 0.5 + 0.5, 1.0);
	rtFragColor = vTexcoord;
}